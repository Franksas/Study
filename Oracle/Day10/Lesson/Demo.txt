
二、编程题
 已知员工表emp(员工号empno,姓名ename,职位job,领导编号mgr,入职时间hirdate,工资sal,奖金comm,部门号deptno)
 部门表dept(部门编号deptno,部门名称dname,部门所在地loc)
 工资等级表salgrade(等级grade,最低工资losal,最高工资hisal)

1、查询员工信息：员工号 姓名 月薪 年薪 奖金 年收入
select empno,ename,sal,sal*12,comm,sal*12+nvl(comm,0) from emp;
2、查询各个部门各个职位的平均工资和最大工资。
select deptno,job,avg(sal),max(sal) from emp group by deptno,job;

3、查询名字的第二个字母是‘S’的员工的员工姓名，工资和部门号。
select ename,sal,deptno from emp where ename like '_S%';
4、列出至少有三个员工的所有部门。
select deptno,from emp group by deptno having count(*)>=3;
5、检索20号部门职位是经理或者工资大于3000的员工的姓名，工资和部门号。
select ename,sal,deptno from emp where deptno=20 and job='MANAGER' OR sal>3000;
6、查询佣金(COMM)为0或为NULL的员工信息
select * from emp where comm=0 or comm is null;
7、查询工资等级处于第三级别的员工的姓名。
select ename from emp e,salgrade g where e.sal between g.losal and g.hisal and g.grade=3;
8、查询从事‘MANAGER’工作的员工姓名和所在部门名称
select e.ename,d.dname from emp e, dept d where e.deptno=d.deptno and e.job='MANAGE';
9、显示FORD的上级领导
select * from emp e1 where e1.empno=(sal e.mgr from emp e where e.ename='FORD');
 select * from emp where e.empno=e.mgr and e.ename='FORD';
10、统计每个部门的人数（包括没有员工的部门）
select d.deptno,count(e.deptno) from emp e,dept d where e.deptno(+)=d.deptno group by d.deptno;
select d.deptno,count(e.deptno) from emp e right join dept d on e.deptno=d.deptno group by d.deptno;
11、检索与SCOTT从事相同工作的员工信息。
select * from emp where job=(select job from emp where ename='SCOTT');
12、查询显示和 ADAMS 同部门且同工作岗位的员工姓名、工作岗位、工资、部门编号
select ename,job,sal,deptno from emp where (deptno,job)=(select deptno,job from emp where ename='ADAMS');
13、查询高于本部门平均工资的员工信息(姓名和工资)
select ename,sal from emp e1 where e1.sal >(select avg(e2.sal)  from emp e2 where e2.deptno=e1.deptno);
select e.ename,e.sal from emp e,
(select deptno,avg(sal)avgsal from emp group by deptno) a where e.deptno=a.deptno and e.sal>a.avgsal;
14、按照工资由高到低进行排序，获取第4~7条记录
select * from
(select e.* ,rownum rn from
(select * from emp order by sal desc) e) e1 where e1.rn>4 and e1.rn<=7;


15、显示超过所有部门平均工资的所有员工名、工资和部门号
select * from emp where sal>all(select avg（sal) from emp group by deptno);
/*16、问题描述：
已知关系模式：
S (SNO,SNAME）  学生关系。SNO 为学号，SNAME 为姓名
C (CNO,CNAME,CTEACHER)  课程关系。CNO 为课程号，CNAME 为课程名，CTEACHER 为任课教师
SC(SNO,CNO,SCGRADE)   选课关系。SCGRADE 为成绩
要求实现如下8个处理：
  1) 找出没有选修过“李明”老师讲授课程的所有学生姓名

  2) 列出有二门以上（含两门）不及格课程的学生姓名及其平均成绩
  3) 列出既学过“1”号课程，又学过“2”号课程的所有学生姓名
  4) 列出“1”号课成绩比“2”号同学该门课成绩高的所有学生的学号
  5) 列出“1”号课成绩比“2”号课成绩高的所有学生的学号及其“1”号课和“2”号课的成绩
    6) 使用标准SQL嵌套语句查询选修课程名称为’Oracle’的学生学号和姓名
    7) 查询选修了课程的学员人数
8) 查询选修课程超过5门的学生姓名
9） 创建一个查询学生姓名，课程名称和成绩的只读视图
10) 给学生表的学生姓名创建一个索引*/
 CREATE TABLE c(
       cno NUMBER(10) PRIMARY KEY,
       cname VARCHAR2(20),
      cteacher VARCHAR2(16)

);
 CREATE TABLE s(
       sno NUMBER(10) PRIMARY KEY,
       sname VARCHAR2(20)
);
 CREATE TABLE sc(
       cno NUMBER(10),
       sno NUMBER(10),
      scgrade VARCHAR2(16)

);

--1) 找出没有选修过“李明”老师讲授课程的所有学生姓名\
select * from s where s.sno not in(
SELECT sname FROM c,s,sc WHERE  c.cteacher='李明' AND c.cno(+)=sc.cno AND s.sno=sc.sno(+));
--2) 列出有二门以上（含两门）不及格课程的学生姓名及其平均成绩
select sname, avg(scgrade) from s,sc,
(select sc.sno from sc where sc.scgrade<60 group by sc.sno having count(*)>=2)a where s.sno=sc.sno and s.sno=a.sno group by s.sname;

--3) 列出既学过“1”号课程，又学过“2”号课程的所有学生姓名
select s.sname from s where s.sno in (
select sno from sc where cno=1
intersect
select sno from sc where cno=2);
SELECT s.sno,s.sname FROM  s,sc WHERE s.sno=sc.sno and(sc.cno=1 or sc.cno =2 )group by s.sno,s.sname having count(s.sno)>1;
--4) 列出“1”号课成绩比“2”号同学该门课成绩高的所有学生的学号
SELECT sc.sno FROM sc WHERE sc.cno=1 AND sc.scgrade> (SELECT scgrade FROM sc WHERE sc.sno=2 AND sc.cno=1 );
--5) 列出“1”号课成绩比“2”号课成绩高的所有学生的学号及其“1”号课和“2”号课的成绩
select a.sno,a.scgrade,b.scgrade from  (select sc.scgrade,sc.sno from sc where sc.cno=1) a
(select sc.scgrade,sc.sno from sc where sc.sno=2) b
where a.sno=b.sno and a.scgrade >b.scgrade;

SELECT a.scgrade,a.sno FROM sc a,sc b WHERE a.sno=b.sno and a.cno=1 AND b.cno=2 and a.scgrade> b.scgrade;
--6) 使用标准SQL嵌套语句查询选修课程名称为’Oracle’的学生学号和姓名
select s.sname,s.sno from s where s.sno in(
SELECT sc.sno FROM sc WHERE sc.cno=(SELECT cno FROM c WHERE  cname='Oracle'));

--7) 查询选修了课程的学员人数
SELECT count(distinct sno) FROM sc;
--8) 查询选修课程超过5门的学生姓名
select s.sname from s where s.sno in(
SELECT sc.no  FROM sc group by sno having count(sno)>5);
--9） 创建一个查询学生姓名，课程名称和成绩的只读视图
CREATE VIEW v_s
AS
SELECT c.cname,s.sname,sc.scgrade FROM c,s,sc WHERE c.cno=sc.cno AND s.sno=sc.sno
WITH READ ONLY;
--10) 给学生表的学生姓名创建一个索引
CREATE INDEX s_sname_idx ON s(sname);

--17、对所有员工,如果该员工职位是MANAGER，并且在DALLAS工作那么就给他薪金加15％；
--如果该员工职位是CLERK，并且在NEW YORK工作那么就给他薪金扣除5％;其他情况不作处理。要求：使用游标编程实现。
DECLARE
  CURSOR emp_cursor IS
    SELECT e.job,d.loc,e.sal，e.empno FROM emp e,dept d WHERE e.deptno = d.deptno;
  v_emp emp_cursor%rowtype;
BEGIN
  for v_emp in emp_cursor loop
    if v_emp.job='MANAGER' AND v_emp.loc='DALLAS'
      THEN UPDATE emp set sal=sal*(1+0.15)
        where empno=v_emp.empno;
        elsif v_emp.job='CLERK' AND v_emp.loc='NEW YORK'
      THEN UPDATE emp set sal=sal*(1-0.05)
        where empno=v_emp.empno;
        else null;
        END IF;
        END LOOP;
END;
select * from emp;
--18 、用PL/SQL编写一个存储过程实现根据部门编号输出员工姓名，工资和部门名称的功能。
CREATE OR REPLACE PROCEDURE getdeptno(v_deptno in dept.deptno%type
)
IS
CURSOR test_cursor is select e.ename,d.dname,e.sal from emp e,dept d where e.deptno=d.deptno AND d.deptno=v_deptno;
v_dept test_cursor%rowtype;
BEGIN
  OPEN test_cursor;
  LOOP
  fetch test_cursor into v_dept;
     exit when test_cursor%notfound;
  dbms_output.put_line(v_dept.dname||','||v_dept.ename||','||v_dept.sal);
  END LOOP;
  CLOSE test_cursor;
END;

  DECLARE
  BEGIN
    getdeptno(10);
  END;
